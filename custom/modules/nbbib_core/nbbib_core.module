<?php

/**
 * @file
 * Contains nbbib_core.module.
 */

use Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_theme().
 */
function nbbib_core_theme($existing, $type, $theme, $path) {
  return [
    'nbbib_intro' => [
      'variables' => [],
    ],
    'nbbib_about' => [
      'variables' => [],
    ],
  ];
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function nbbib_core_form_views_exposed_form_alter(&$form, $form_state, $form_id) {

  // Target specific exposed form (bibliography).
  if ($form['#id'] == "views-exposed-form-nb-bibliography-citations-page-1") {
    $form['bibliographic_type']['#type'] = "select";
    $form['bibliographic_type']['#size'] = NULL;
    $form['bibliographic_type']['#validated'] = TRUE;

    // Override bibliographic_type input to dropdown.
    $form['bibliographic_type']['#options'] = [
      '' => t('- Any -'),
      'Book' => t('Book'),
      'Book Section' => t('Book Section'),
      'Journal Article' => t('Journal Article'),
      'Thesis' => t('Thesis'),
    ];

    $form['bibliographic_type']['#default_value'] = 'All';

    // Override collections input to dropdown.
    $form['collections_5']['#type'] = "select";
    $form['collections_5']['#size'] = NULL;
    $form['collections_5']['#validated'] = TRUE;

    $form['collections_5']['#options'] = [
      '' => t('- Any -'),
      'Religion: Anglican' => t('Religion: Anglican'),
      'New Brunswickana' => t('New Brunswickana'),
    ];

    $form['collections_5']['#default_value'] = 'All';
  }

}

/**
 * Adds a top priority handler to the 'submit' action of the specified form.
 */
function top_submit_handler(&$form, $handler) {
  foreach (array_keys($form['actions']) as $action) {
    if ($action != 'preview' && isset($form['actions'][$action]['#type']) &&
    $form['actions'][$action]['#type'] === 'submit') {
      array_unshift($form['actions'][$action]['#submit'], $handler);
    }
  }
}

/**
 * Implements hook_form_alter().
 */
function nbbib_core_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  // Target all reference add/edit forms.
  $target_forms = [
    'yabrm_book_add_form',
    'yabrm_book_edit_form',
    'yabrm_book_section_add_form',
    'yabrm_book_section_edit_form',
    'yabrm_thesis_add_form',
    'yabrm_thesis_edit_form',
    'yabrm_journal_article_add_form',
    'yabrm_journal_article_edit_form',
  ];

  if (in_array($form_id, $target_forms)) {
    top_submit_handler($form, 'clr_blank_contribs');
    kint($form['contributors']['widget'][0]['subform']['field_yabrm_contributor_person']);
  }
}

/**
 * Submit handler for yabrm_book_edit. Removes empty contributors before saving to avoid warnings.
 */
function clr_blank_contribs(&$form, FormStateInterface $form_state) {
  $contribs = $form_state->getValue('contributors');

  foreach ($contribs as $key => $contrib) {
    if (empty($contrib['subform']['field_yabrm_contributor_person']['entities'])) {
      if (is_int($key)) {
        unset($contribs[$key]);
      }
    }
  }

  $form_state->setValue('contributors', $contribs);
}

/**
 * Implements hook_views_pre_render().
 */
function nbbib_core_views_pre_render($view) {
  if ($view->id() == 'nb_bibliography_citations') {
    // Include current collection in view title.
    if (!empty($view->getExposedInput()['collections_5'])) {
      $view->setTitle($view->getTitle() . ' - ' . $view->getExposedInput()['collections_5']);
    }
  }
}
